version: "3.9"

services:
  db:
    image: postgres:16
    environment:
      POSTGRES_USER: controller_user
      POSTGRES_PASSWORD: controller_pass
      POSTGRES_DB: controller
    volumes:
      - db_data:/var/lib/postgresql/data
    networks:
      - app_network

  backend:
  build:
    context: ./backend
    dockerfile: Dockerfile
  image: hwperu/controller_backend:latest
  environment:
    DATABASE_URL: postgres://controller_user:controller_pass@db:5432/controller
    JWT_SECRET: super_secret_key
    PORT: 4000
  depends_on:
    - db
  networks:
    - app_network
    - traefik_public
  labels:
    - "traefik.enable=true"
    - "traefik.http.routers.controller-backend.rule=Host(`backend.hwperu.com`)"
    - "traefik.http.services.controller-backend.loadbalancer.server.port=4000"
    - "traefik.docker.network=traefik_public"


  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    image: hwperu/controller_frontend:latest
    environment:
      NEXT_PUBLIC_API_URL: https://backend.hwperu.com
    depends_on:
      - backend
    networks:
      - app_network
      - traefik_public
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.controller-frontend.rule=Host(`frontend.hwperu.com`)"
      - "traefik.http.services.controller-frontend.loadbalancer.server.port=3000"
      - "traefik.docker.network=traefik_public"

  adminer:
    image: adminer:latest
    networks:
      - app_network
      - traefik_public
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.controller-adminer.rule=Host(`admin.hwperu.com`)"
      - "traefik.http.services.controller-adminer.loadbalancer.server.port=8080"
      - "traefik.docker.network=traefik_public"

volumes:
  db_data:

networks:
  app_network:
    external: true
  traefik_public:
    external: true
